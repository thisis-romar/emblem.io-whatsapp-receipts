# Environment Variables Template
# Copy this file to .env and fill in the required values

# ============================================================================
# WHATSAPP API CONFIGURATION (REQUIRED)
# ============================================================================

# WhatsApp Business API Access Token
# Get this from Meta Developer Console after creating a WhatsApp Business App
WHATSAPP_ACCESS_TOKEN=your_whatsapp_access_token_here

# WhatsApp Phone Number ID
# This is the ID of your WhatsApp Business phone number
WHATSAPP_PHONE_NUMBER_ID=your_phone_number_id_here

# Webhook Verification Token
# Use a secure random string - this verifies webhook requests from Meta
WEBHOOK_VERIFY_TOKEN=your_secure_webhook_verify_token_here

# Webhook Secret (Optional but Recommended)
# Used to verify webhook payload authenticity
WHATSAPP_WEBHOOK_SECRET=your_webhook_secret_here

# ============================================================================
# GOOGLE CLOUD CONFIGURATION (REQUIRED FOR OCR)
# ============================================================================

# Google Cloud Project ID where Document AI processor is located
GOOGLE_CLOUD_PROJECT_ID=your_gcp_project_id

# Google Cloud Region where Document AI processor is deployed
GOOGLE_CLOUD_REGION=us-central1

# Document AI Processor ID for expense/receipt processing
# Create this in Google Cloud Console > Document AI
DOCUMENT_AI_PROCESSOR_ID=your_processor_id_here

# Path to Google Cloud Service Account Key JSON file
# Download from Google Cloud Console > IAM & Admin > Service Accounts
GOOGLE_APPLICATION_CREDENTIALS=./config/gcp-service-account.json

# ============================================================================
# SERVER CONFIGURATION
# ============================================================================

# Server port (default: 3000)
PORT=3000

# Node.js environment (development/production/test)
NODE_ENV=development

# API Base URL (used for webhook registration)
API_BASE_URL=https://your-domain.com

# ============================================================================
# SECURITY CONFIGURATION
# ============================================================================

# API Key for protected endpoints (optional)
# Generate a secure random string if you want to protect certain endpoints
API_KEY=your_secure_api_key_here

# CORS Origins (comma-separated list of allowed origins)
CORS_ORIGINS=http://localhost:3000,https://your-frontend-domain.com

# Rate limiting (requests per minute per IP)
RATE_LIMIT_PER_MINUTE=60

# Request timeout in milliseconds
REQUEST_TIMEOUT_MS=30000

# ============================================================================
# STORAGE CONFIGURATION
# ============================================================================

# Local storage directory for receipts and media
STORAGE_DIR=./storage

# Maximum file size for uploads (in bytes, default: 10MB)
MAX_FILE_SIZE=10485760

# Storage cleanup interval (in hours, default: 24)
STORAGE_CLEANUP_INTERVAL_HOURS=24

# Maximum age for temporary files (in hours, default: 48)
MAX_TEMP_FILE_AGE_HOURS=48

# ============================================================================
# LOGGING CONFIGURATION
# ============================================================================

# Log level (error, warn, info, debug)
LOG_LEVEL=info

# Whether to log stack traces in production (true/false)
LOG_STACK_TRACE=false

# Enable request logging (true/false)
LOG_REQUESTS=true

# ============================================================================
# FEATURE FLAGS
# ============================================================================

# Enable mock OCR for development/demo (true/false)
# When enabled, uses mock data instead of Document AI for testing
ENABLE_MOCK_OCR=false

# Enable debug mode for WhatsApp messages (true/false)
DEBUG_WHATSAPP=false

# Enable automatic receipt approval for demo (true/false)
# WARNING: Only enable in development/demo environments
AUTO_APPROVE_RECEIPTS=false

# Maximum receipts per user (0 for unlimited)
MAX_RECEIPTS_PER_USER=100

# ============================================================================
# WEBHOOK CONFIGURATION
# ============================================================================

# Webhook URL path (default: /webhook/whatsapp)
WEBHOOK_PATH=/webhook/whatsapp

# Webhook timeout in milliseconds
WEBHOOK_TIMEOUT_MS=5000

# ============================================================================
# MONITORING & HEALTH CHECKS
# ============================================================================

# Health check endpoint path (default: /health)
HEALTH_CHECK_PATH=/health

# Enable detailed health checks (true/false)
DETAILED_HEALTH_CHECKS=true

# Health check timeout in milliseconds
HEALTH_CHECK_TIMEOUT_MS=5000

# ============================================================================
# DEVELOPMENT CONFIGURATION
# ============================================================================

# Enable development features (auto-restart, detailed errors, etc.)
DEV_MODE=true

# Mock webhook events for testing (true/false)
MOCK_WEBHOOK_EVENTS=false

# Test phone number for development (your phone number for testing)
DEV_TEST_PHONE_NUMBER=1234567890

# ============================================================================
# DEPLOYMENT CONFIGURATION (CLOUD RUN / DOCKER)
# ============================================================================

# Google Cloud Run service name
CLOUD_RUN_SERVICE_NAME=whatsapp-receipt-processor

# Google Cloud Run region
CLOUD_RUN_REGION=us-central1

# Docker image name
DOCKER_IMAGE_NAME=whatsapp-receipts

# ============================================================================
# EXAMPLE VALUES (REMOVE THESE IN PRODUCTION)
# ============================================================================

# Example WhatsApp token format (starts with EAA...)
# WHATSAPP_ACCESS_TOKEN=EAAxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# Example Phone Number ID (numeric)
# WHATSAPP_PHONE_NUMBER_ID=123456789012345

# Example Webhook Verify Token (secure random string)
# WEBHOOK_VERIFY_TOKEN=MySecureWebhookToken123!

# Example Google Cloud Project
# GOOGLE_CLOUD_PROJECT_ID=my-whatsapp-project-123456

# Example Document AI Processor ID
# DOCUMENT_AI_PROCESSOR_ID=abcdef123456789

# ============================================================================
# NOTES
# ============================================================================

# 1. Never commit the actual .env file to version control
# 2. Use strong, unique tokens and passwords
# 3. Rotate tokens regularly in production
# 4. Enable HTTPS in production (required for WhatsApp webhooks)
# 5. Set up proper monitoring and alerting
# 6. Review and audit access permissions regularly
# 7. Consider using secret management services in production (AWS Secrets Manager, Google Secret Manager, etc.)

# For production deployment:
# - Set NODE_ENV=production
# - Use strong API_KEY
# - Configure proper CORS_ORIGINS
# - Set up SSL/TLS certificates
# - Enable logging and monitoring
# - Set ENABLE_MOCK_OCR=false
# - Configure proper storage (consider cloud storage for scale)