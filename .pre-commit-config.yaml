repos:
  # LLM Commit Analysis - Local validation before commits
  - repo: local
    hooks:
      - id: llm-commit-analysis
        name: LLM Commit Analysis
        entry: powershell.exe -ExecutionPolicy Bypass -File tools/LLMCommitIdentifier.ps1 -ShowDetails
        language: system
        always_run: true
        pass_filenames: false
        stages: [commit]
        verbose: true

      - id: chat-history-correlation
        name: Chat History Correlation
        entry: powershell.exe -ExecutionPolicy Bypass -File tools/ChatHistoryParser.ps1 -ShowDetails
        language: system
        always_run: true
        pass_filenames: false
        stages: [commit]

  # Standard pre-commit hooks for code quality
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-json
      - id: check-merge-conflict
      - id: check-added-large-files
        args: ['--maxkb=500']

  # PowerShell script validation
  - repo: local
    hooks:
      - id: powershell-syntax-check
        name: PowerShell Syntax Check
        entry: powershell.exe -ExecutionPolicy Bypass -Command "Get-ChildItem -Path . -Filter '*.ps1' -Recurse | ForEach-Object { $ast = [System.Management.Automation.Language.Parser]::ParseFile($_.FullName, [ref]$null, [ref]$null); if ($ast -eq $null) { Write-Error \"Syntax error in $($_.Name)\"; exit 1 } }"
        language: system
        files: '\.ps1$'
        pass_filenames: false

ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: []
  submodules: false